module HanzoAI
  module Resources
    class Key
      attr_reader regenerate: HanzoAI::Resources::Key::Regenerate

      def update: (
        key: String,
        ?aliases: top?,
        ?allowed_cache_controls: ::Array[top]?,
        ?blocked: bool?,
        ?budget_duration: String?,
        ?budget_id: String?,
        ?config: top?,
        ?duration: String?,
        ?enforced_params: ::Array[String]?,
        ?guardrails: ::Array[String]?,
        ?key_alias: String?,
        ?max_budget: Float?,
        ?max_parallel_requests: Integer?,
        ?metadata: top?,
        ?model_max_budget: top?,
        ?model_rpm_limit: top?,
        ?model_tpm_limit: top?,
        ?models: ::Array[top]?,
        ?permissions: top?,
        ?rpm_limit: Integer?,
        ?spend: Float?,
        ?tags: ::Array[String]?,
        ?team_id: String?,
        ?temp_budget_expiry: Time?,
        ?temp_budget_increase: Float?,
        ?tpm_limit: Integer?,
        ?user_id: String?,
        ?llm_changed_by: String,
        ?request_options: HanzoAI::request_opts
      ) -> top

      def list: (
        ?include_team_keys: bool,
        ?key_alias: String?,
        ?organization_id: String?,
        ?page: Integer,
        ?return_full_object: bool,
        ?size: Integer,
        ?team_id: String?,
        ?user_id: String?,
        ?request_options: HanzoAI::request_opts
      ) -> HanzoAI::Models::KeyListResponse

      def delete: (
        ?key_aliases: ::Array[String]?,
        ?keys: ::Array[String]?,
        ?llm_changed_by: String,
        ?request_options: HanzoAI::request_opts
      ) -> top

      def block: (
        key: String,
        ?llm_changed_by: String,
        ?request_options: HanzoAI::request_opts
      ) -> HanzoAI::Models::KeyBlockResponse?

      def check_health: (
        ?request_options: HanzoAI::request_opts
      ) -> HanzoAI::Models::KeyCheckHealthResponse

      def generate: (
        ?aliases: top?,
        ?allowed_cache_controls: ::Array[top]?,
        ?blocked: bool?,
        ?budget_duration: String?,
        ?budget_id: String?,
        ?config: top?,
        ?duration: String?,
        ?enforced_params: ::Array[String]?,
        ?guardrails: ::Array[String]?,
        ?key: String?,
        ?key_alias: String?,
        ?max_budget: Float?,
        ?max_parallel_requests: Integer?,
        ?metadata: top?,
        ?model_max_budget: top?,
        ?model_rpm_limit: top?,
        ?model_tpm_limit: top?,
        ?models: ::Array[top]?,
        ?permissions: top?,
        ?rpm_limit: Integer?,
        ?send_invite_email: bool?,
        ?soft_budget: Float?,
        ?spend: Float?,
        ?tags: ::Array[String]?,
        ?team_id: String?,
        ?tpm_limit: Integer?,
        ?user_id: String?,
        ?llm_changed_by: String,
        ?request_options: HanzoAI::request_opts
      ) -> HanzoAI::Models::GenerateKeyResponse

      def regenerate_by_key: (
        String path_key,
        ?aliases: top?,
        ?allowed_cache_controls: ::Array[top]?,
        ?blocked: bool?,
        ?budget_duration: String?,
        ?budget_id: String?,
        ?config: top?,
        ?duration: String?,
        ?enforced_params: ::Array[String]?,
        ?guardrails: ::Array[String]?,
        ?body_key: String?,
        ?key_alias: String?,
        ?max_budget: Float?,
        ?max_parallel_requests: Integer?,
        ?metadata: top?,
        ?model_max_budget: top?,
        ?model_rpm_limit: top?,
        ?model_tpm_limit: top?,
        ?models: ::Array[top]?,
        ?new_master_key: String?,
        ?permissions: top?,
        ?rpm_limit: Integer?,
        ?send_invite_email: bool?,
        ?soft_budget: Float?,
        ?spend: Float?,
        ?tags: ::Array[String]?,
        ?team_id: String?,
        ?tpm_limit: Integer?,
        ?user_id: String?,
        ?llm_changed_by: String,
        ?request_options: HanzoAI::request_opts
      ) -> HanzoAI::Models::GenerateKeyResponse?

      def retrieve_info: (
        ?key: String?,
        ?request_options: HanzoAI::request_opts
      ) -> top

      def unblock: (
        key: String,
        ?llm_changed_by: String,
        ?request_options: HanzoAI::request_opts
      ) -> top

      def initialize: (client: HanzoAI::Client) -> void
    end
  end
end
