module HanzoAI
  module Models
    type provider_list_budgets_response =
      {
        providers: ::Hash[Symbol, HanzoAI::Models::ProviderListBudgetsResponse::Provider]
      }

    class ProviderListBudgetsResponse < HanzoAI::BaseModel
      attr_reader providers: ::Hash[Symbol, HanzoAI::Models::ProviderListBudgetsResponse::Provider]?

      def providers=: (
        ::Hash[Symbol, HanzoAI::Models::ProviderListBudgetsResponse::Provider]
      ) -> ::Hash[Symbol, HanzoAI::Models::ProviderListBudgetsResponse::Provider]

      def initialize: (
        ?providers: ::Hash[Symbol, HanzoAI::Models::ProviderListBudgetsResponse::Provider]
      ) -> void

      def to_hash: -> HanzoAI::Models::provider_list_budgets_response

      type provider =
        {
          budget_limit: Float?,
          time_period: String?,
          budget_reset_at: String?,
          spend: Float?
        }

      class Provider < HanzoAI::BaseModel
        attr_accessor budget_limit: Float?

        attr_accessor time_period: String?

        attr_accessor budget_reset_at: String?

        attr_accessor spend: Float?

        def initialize: (
          budget_limit: Float?,
          time_period: String?,
          ?budget_reset_at: String?,
          ?spend: Float?
        ) -> void

        def to_hash: -> HanzoAI::Models::ProviderListBudgetsResponse::provider
      end
    end
  end
end
