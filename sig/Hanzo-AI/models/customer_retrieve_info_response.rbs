module HanzoAI
  module Models
    type customer_retrieve_info_response =
      {
        blocked: bool,
        user_id: String,
        alias_: String?,
        allowed_model_region: HanzoAI::Models::CustomerRetrieveInfoResponse::allowed_model_region?,
        default_model: String?,
        llm_budget_table: HanzoAI::Models::CustomerRetrieveInfoResponse::LlmBudgetTable?,
        spend: Float
      }

    class CustomerRetrieveInfoResponse < HanzoAI::BaseModel
      attr_accessor blocked: bool

      attr_accessor user_id: String

      attr_accessor alias_: String?

      attr_accessor allowed_model_region: HanzoAI::Models::CustomerRetrieveInfoResponse::allowed_model_region?

      attr_accessor default_model: String?

      attr_accessor llm_budget_table: HanzoAI::Models::CustomerRetrieveInfoResponse::LlmBudgetTable?

      attr_reader spend: Float?

      def spend=: (Float) -> Float

      def initialize: (
        blocked: bool,
        user_id: String,
        ?alias_: String?,
        ?allowed_model_region: HanzoAI::Models::CustomerRetrieveInfoResponse::allowed_model_region?,
        ?default_model: String?,
        ?llm_budget_table: HanzoAI::Models::CustomerRetrieveInfoResponse::LlmBudgetTable?,
        ?spend: Float
      ) -> void

      def to_hash: -> HanzoAI::Models::customer_retrieve_info_response

      type allowed_model_region = :eu | :us

      module AllowedModelRegion
        extend HanzoAI::Enum

        EU: :eu
        US: :us

        def self?.values: -> ::Array[HanzoAI::Models::CustomerRetrieveInfoResponse::allowed_model_region]
      end

      type llm_budget_table =
        {
          budget_duration: String?,
          max_budget: Float?,
          max_parallel_requests: Integer?,
          model_max_budget: top?,
          rpm_limit: Integer?,
          soft_budget: Float?,
          tpm_limit: Integer?
        }

      class LlmBudgetTable < HanzoAI::BaseModel
        attr_accessor budget_duration: String?

        attr_accessor max_budget: Float?

        attr_accessor max_parallel_requests: Integer?

        attr_accessor model_max_budget: top?

        attr_accessor rpm_limit: Integer?

        attr_accessor soft_budget: Float?

        attr_accessor tpm_limit: Integer?

        def initialize: (
          ?budget_duration: String?,
          ?max_budget: Float?,
          ?max_parallel_requests: Integer?,
          ?model_max_budget: top?,
          ?rpm_limit: Integer?,
          ?soft_budget: Float?,
          ?tpm_limit: Integer?
        ) -> void

        def to_hash: -> HanzoAI::Models::CustomerRetrieveInfoResponse::llm_budget_table
      end
    end
  end
end
