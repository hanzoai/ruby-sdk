module Hanzoai
  module Models
    type organization_update_member_params =
      {
        organization_id: String,
        max_budget_in_organization: Float?,
        role: Hanzoai::Models::OrganizationUpdateMemberParams::role?,
        user_email: String?,
        user_id: String?
      }
      & Hanzoai::request_parameters

    class OrganizationUpdateMemberParams < Hanzoai::BaseModel
      extend Hanzoai::RequestParameters::Converter
      include Hanzoai::RequestParameters

      attr_accessor organization_id: String

      attr_accessor max_budget_in_organization: Float?

      attr_accessor role: Hanzoai::Models::OrganizationUpdateMemberParams::role?

      attr_accessor user_email: String?

      attr_accessor user_id: String?

      def initialize: (
        organization_id: String,
        ?max_budget_in_organization: Float?,
        ?role: Hanzoai::Models::OrganizationUpdateMemberParams::role?,
        ?user_email: String?,
        ?user_id: String?,
        ?request_options: Hanzoai::request_opts
      ) -> void

      def to_hash: -> Hanzoai::Models::organization_update_member_params

      type role =
        :proxy_admin
        | :proxy_admin_viewer
        | :org_admin
        | :internal_user
        | :internal_user_viewer
        | :team
        | :customer

      module Role
        extend Hanzoai::Enum

        PROXY_ADMIN: :proxy_admin
        PROXY_ADMIN_VIEWER: :proxy_admin_viewer
        ORG_ADMIN: :org_admin
        INTERNAL_USER: :internal_user
        INTERNAL_USER_VIEWER: :internal_user_viewer
        TEAM: :team
        CUSTOMER: :customer

        def self?.values: -> ::Array[Hanzoai::Models::OrganizationUpdateMemberParams::role]
      end
    end
  end
end
