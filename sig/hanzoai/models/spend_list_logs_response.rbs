module Hanzoai
  module Models
    type spend_list_logs_response_item =
      {
        api_key: String,
        call_type: String,
        end_time: Hanzoai::Models::SpendListLogsResponseItem::end_time?,
        messages: Hanzoai::Models::SpendListLogsResponseItem::messages?,
        request_id: String,
        response: Hanzoai::Models::SpendListLogsResponseItem::response?,
        start_time: Hanzoai::Models::SpendListLogsResponseItem::start_time?,
        api_base: String?,
        cache_hit: String?,
        cache_key: String?,
        completion_tokens: Integer?,
        metadata: top,
        model: String?,
        prompt_tokens: Integer?,
        request_tags: top,
        requester_ip_address: String?,
        spend: Float?,
        total_tokens: Integer?,
        user: String?
      }

    class SpendListLogsResponseItem < Hanzoai::BaseModel
      attr_accessor api_key: String

      attr_accessor call_type: String

      attr_accessor end_time: Hanzoai::Models::SpendListLogsResponseItem::end_time?

      attr_accessor messages: Hanzoai::Models::SpendListLogsResponseItem::messages?

      attr_accessor request_id: String

      attr_accessor response: Hanzoai::Models::SpendListLogsResponseItem::response?

      attr_accessor start_time: Hanzoai::Models::SpendListLogsResponseItem::start_time?

      attr_accessor api_base: String?

      attr_accessor cache_hit: String?

      attr_accessor cache_key: String?

      attr_accessor completion_tokens: Integer?

      attr_reader metadata: top?

      def metadata=: (top) -> top

      attr_accessor model: String?

      attr_accessor prompt_tokens: Integer?

      attr_reader request_tags: top?

      def request_tags=: (top) -> top

      attr_accessor requester_ip_address: String?

      attr_accessor spend: Float?

      attr_accessor total_tokens: Integer?

      attr_accessor user: String?

      def initialize: (
        api_key: String,
        call_type: String,
        end_time: Hanzoai::Models::SpendListLogsResponseItem::end_time?,
        messages: Hanzoai::Models::SpendListLogsResponseItem::messages?,
        request_id: String,
        response: Hanzoai::Models::SpendListLogsResponseItem::response?,
        start_time: Hanzoai::Models::SpendListLogsResponseItem::start_time?,
        ?api_base: String?,
        ?cache_hit: String?,
        ?cache_key: String?,
        ?completion_tokens: Integer?,
        ?metadata: top,
        ?model: String?,
        ?prompt_tokens: Integer?,
        ?request_tags: top,
        ?requester_ip_address: String?,
        ?spend: Float?,
        ?total_tokens: Integer?,
        ?user: String?
      ) -> void

      def to_hash: -> Hanzoai::Models::spend_list_logs_response_item

      type end_time = String | Time

      module EndTime
        extend Hanzoai::Union

        def self?.variants: -> [String, Time]
      end

      type messages = String | ::Array[top] | top

      module Messages
        extend Hanzoai::Union

        def self?.variants: -> [String, ::Array[top], top]

        type union_member1_array = ::Array[top]

        UnionMember1Array: union_member1_array
      end

      type response = String | ::Array[top] | top

      module Response
        extend Hanzoai::Union

        def self?.variants: -> [String, ::Array[top], top]

        type union_member1_array = ::Array[top]

        UnionMember1Array: union_member1_array
      end

      type start_time = String | Time

      module StartTime
        extend Hanzoai::Union

        def self?.variants: -> [String, Time]
      end
    end

    type spend_list_logs_response =
      ::Array[Hanzoai::Models::SpendListLogsResponseItem]

    SpendListLogsResponse: spend_list_logs_response
  end
end
