module Hanzoai
  module Models
    module Model
      type update_deployment =
        {
          llm_params: Hanzoai::Models::Model::UpdateDeployment::LlmParams?,
          model_info: Hanzoai::Models::ModelInfo?,
          model_name: String?
        }

      class UpdateDeployment < Hanzoai::BaseModel
        attr_accessor llm_params: Hanzoai::Models::Model::UpdateDeployment::LlmParams?

        attr_accessor model_info: Hanzoai::Models::ModelInfo?

        attr_accessor model_name: String?

        def initialize: (
          ?llm_params: Hanzoai::Models::Model::UpdateDeployment::LlmParams?,
          ?model_info: Hanzoai::Models::ModelInfo?,
          ?model_name: String?
        ) -> void

        def to_hash: -> Hanzoai::Models::Model::update_deployment

        type llm_params =
          {
            api_base: String?,
            api_key: String?,
            api_version: String?,
            aws_access_key_id: String?,
            aws_region_name: String?,
            aws_secret_access_key: String?,
            budget_duration: String?,
            configurable_clientside_auth_params: ::Array[Hanzoai::Models::Model::UpdateDeployment::LlmParams::configurable_clientside_auth_param]?,
            custom_llm_provider: String?,
            input_cost_per_second: Float?,
            input_cost_per_token: Float?,
            llm_trace_id: String?,
            max_budget: Float?,
            max_file_size_mb: Float?,
            max_retries: Integer?,
            merge_reasoning_content_in_choices: bool?,
            model: String?,
            model_info: top?,
            organization: String?,
            output_cost_per_second: Float?,
            output_cost_per_token: Float?,
            region_name: String?,
            rpm: Integer?,
            stream_timeout: Hanzoai::Models::Model::UpdateDeployment::LlmParams::stream_timeout?,
            timeout: Hanzoai::Models::Model::UpdateDeployment::LlmParams::timeout?,
            tpm: Integer?,
            use_in_pass_through: bool?,
            vertex_credentials: Hanzoai::Models::Model::UpdateDeployment::LlmParams::vertex_credentials?,
            vertex_location: String?,
            vertex_project: String?,
            watsonx_region_name: String?
          }

        class LlmParams < Hanzoai::BaseModel
          attr_accessor api_base: String?

          attr_accessor api_key: String?

          attr_accessor api_version: String?

          attr_accessor aws_access_key_id: String?

          attr_accessor aws_region_name: String?

          attr_accessor aws_secret_access_key: String?

          attr_accessor budget_duration: String?

          attr_accessor configurable_clientside_auth_params: ::Array[Hanzoai::Models::Model::UpdateDeployment::LlmParams::configurable_clientside_auth_param]?

          attr_accessor custom_llm_provider: String?

          attr_accessor input_cost_per_second: Float?

          attr_accessor input_cost_per_token: Float?

          attr_accessor llm_trace_id: String?

          attr_accessor max_budget: Float?

          attr_accessor max_file_size_mb: Float?

          attr_accessor max_retries: Integer?

          attr_accessor merge_reasoning_content_in_choices: bool?

          attr_accessor model: String?

          attr_accessor model_info: top?

          attr_accessor organization: String?

          attr_accessor output_cost_per_second: Float?

          attr_accessor output_cost_per_token: Float?

          attr_accessor region_name: String?

          attr_accessor rpm: Integer?

          attr_accessor stream_timeout: Hanzoai::Models::Model::UpdateDeployment::LlmParams::stream_timeout?

          attr_accessor timeout: Hanzoai::Models::Model::UpdateDeployment::LlmParams::timeout?

          attr_accessor tpm: Integer?

          attr_accessor use_in_pass_through: bool?

          attr_accessor vertex_credentials: Hanzoai::Models::Model::UpdateDeployment::LlmParams::vertex_credentials?

          attr_accessor vertex_location: String?

          attr_accessor vertex_project: String?

          attr_accessor watsonx_region_name: String?

          def initialize: (
            ?api_base: String?,
            ?api_key: String?,
            ?api_version: String?,
            ?aws_access_key_id: String?,
            ?aws_region_name: String?,
            ?aws_secret_access_key: String?,
            ?budget_duration: String?,
            ?configurable_clientside_auth_params: ::Array[Hanzoai::Models::Model::UpdateDeployment::LlmParams::configurable_clientside_auth_param]?,
            ?custom_llm_provider: String?,
            ?input_cost_per_second: Float?,
            ?input_cost_per_token: Float?,
            ?llm_trace_id: String?,
            ?max_budget: Float?,
            ?max_file_size_mb: Float?,
            ?max_retries: Integer?,
            ?merge_reasoning_content_in_choices: bool?,
            ?model: String?,
            ?model_info: top?,
            ?organization: String?,
            ?output_cost_per_second: Float?,
            ?output_cost_per_token: Float?,
            ?region_name: String?,
            ?rpm: Integer?,
            ?stream_timeout: Hanzoai::Models::Model::UpdateDeployment::LlmParams::stream_timeout?,
            ?timeout: Hanzoai::Models::Model::UpdateDeployment::LlmParams::timeout?,
            ?tpm: Integer?,
            ?use_in_pass_through: bool?,
            ?vertex_credentials: Hanzoai::Models::Model::UpdateDeployment::LlmParams::vertex_credentials?,
            ?vertex_location: String?,
            ?vertex_project: String?,
            ?watsonx_region_name: String?
          ) -> void

          def to_hash: -> Hanzoai::Models::Model::UpdateDeployment::llm_params

          type configurable_clientside_auth_param =
            String | Hanzoai::Models::ConfigurableClientsideParamsCustomAuth

          module ConfigurableClientsideAuthParam
            extend Hanzoai::Union

            def self?.variants: -> [String, Hanzoai::Models::ConfigurableClientsideParamsCustomAuth]
          end

          type stream_timeout = Float | String

          module StreamTimeout
            extend Hanzoai::Union

            def self?.variants: -> [Float, String]
          end

          type timeout = Float | String

          module Timeout
            extend Hanzoai::Union

            def self?.variants: -> [Float, String]
          end

          type vertex_credentials = top | String

          module VertexCredentials
            extend Hanzoai::Union

            def self?.variants: -> [top, String]
          end
        end
      end
    end
  end
end
